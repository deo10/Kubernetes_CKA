kubectl create configmap [configmap_name] --from-literal=APP_COLOR=pink
k get\describe configmap 


\\configmap dififnition
apiVersion: v1
kind: apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  APP_COLOR: pink
  APP_MODE: prod


\\ POD with env or configmap or secrets
apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    name: myapp
spec:
  containers:
  - name: myapp
    image: <Image>
    \\ plain key value
    env:
    - name: APP_COLOR
      value: pink
    \\ config map
    env:
    - name: APP_COLOR
      valueFrom:
        configMapKeyRef:
          name: APP_COLOR
          key: pink
    or
    envFrom:
    - configMapRef:
      name: app_config
    \\ secrets
    env:
    - name: APP_COLOR
      valueFrom:
        secretKeyRef:
    or
    envFrom:
    - secretRef:
      name: app_secret_config

\\ secrets

kubectl create secret generic [secret_name] --from-literal=DB_Host=mysql --from-literal=DB_Pass=password
kubectl get secrets
kubectl describe secret [secret_name] -o yaml


\\to encrypt values
echo -n 'password' | base64
echo -n 'mysql' | base64
- result to configmap values

    