\\ kubectl commands
kubectl get pods
kubectl get pods -l='tier=db'
kubectl get pods --selector="env=dev","bu=finance"
kubectl get pods --show-labels=true
kubectl get pods -o wide

kubectl run nginx --image=nginx
kubectl describe pod nginx
kubectl run redis --image=redis123 --dry-run=client -o yml > pod-difinition.yaml
kubectl run redis --image=redis --port=8080 --expose=true (pod + clusterIP service)
kubectl apply -f pod-difinition.yaml
kubectl edit pod [pod_name]

как поменять значения label в под командой?
kubectl label pods my-pod status=new
kubectl label --overwrite pods my-pod status=old
kubectl label pods --all status=new

kubectl run redis --image=redis --command sleep 1000 --dry-run=client -o yaml

\\ pod-difinition.yaml file
apiVersion: v1
kind: Pod
metadata:
  name: redis
spec:
  containers:
  - image: redis123
    name: redis
    resources:
      memory: 1Gi
      cpu: 1
    limits:
      memory: 2Gi
      cpu: 2
  nodeSelector:
    size: large
  tolerations:
  - key: "env"
    value: "dev"
    effect: "NoSchedule"
    operator: "Equal"

\\ affinity implementation in Pod
apiVersion: v1
kind: Pod
metadata:
  name: with-node-affinity
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: topology.kubernetes.io/zone
            operator: In (Exists\Equal\)
            values:
            - antarctica-east1
            - antarctica-west1
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
          - key: another-node-label-key
            operator: In
            values:
            - another-node-label-value
  containers:
  - name: with-node-affinity
    image: registry.k8s.io/pause:2.0




